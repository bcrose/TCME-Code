<!-- Authors: Mike Bastian,
              Ben Rose,
              Erin Loehr

    Description: This is where the map is viewed with the connected paths.
    -->
@{

    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}
    <style>
        /* Set the size of the div element that contains the map */
        #map {
            height: 400px; /* The height is 400 pixels */
            width: 100%; /* The width is the width of the web page */
        }
    </style>


    <h3>MapView</h3>
    <div id="map"></div>
    <script>
        var map;
        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 40.1934, lng: -85.3864 },
                zoom: 7
            });
            var markerMuncie = new google.maps.Marker({
                position: { lat: 40.1934, lng: -85.3864 },
                map: map
            });
            var markerTwo = new google.maps.Marker({
                position: { lat: 41.1934, lng: -85.3864 },
                map: map
            });
            var contentStringMuncie = '<div id ="content">' +
                '<div id="siteNotice">' +
                '</div>' +
                '<h1 id="firstHeading" class="firstHeading">Hello</h1>' +
                '<div id="bodyContent">' +
                '<p>This should be the content area</p>';
            var infoWindowForMuncie = new google.maps.InfoWindow({
                content: contentStringMuncie
            });
            //Displays 'contentStringMuncie' when moused over the marker
            markerMuncie.addListener('mouseover', function () {
                infoWindowForMuncie.open(map, markerMuncie);
            });
            //Closes the Display for 'contentStringMuncie' when no longer moused over the marker
            markerMuncie.addListener('mouseout', function () {
                infoWindowForMuncie.close();
            });
        }
    </script>
    <!--Load the API from the specified URL
    * The async attribute allows the browser to render the page while the API loads
    * The key parameter will contain your own API key (which is not needed for this tutorial)
    * The callback parameter executes the initMap() function
    -->
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDvNyUzVPp4lgZLtMbUwAot08O1YZ36M6A&callback=initMap"></script>








